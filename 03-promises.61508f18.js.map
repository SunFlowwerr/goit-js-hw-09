{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,IACvBL,EACKI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,K,CATnBO,SAASC,cAAc,SAc/BC,iBAAiB,UAAUC,IAC9BA,EAAKC,iBAEL,MAAMC,EAAOF,EAAKG,cAClB,IAAIC,GAASF,EAAY,MAAEG,MAC3B,MAAMC,GAAQJ,EAAW,KAAEG,MACrBE,GAAUL,EAAa,OAAEG,MAC/B,IAAIG,EAAW,EAEf,IAAK,IAAIC,EAAID,EAAUC,GAAKF,EAAQE,GAAK,EACvCD,EAAWC,EAEXrB,EAAcoB,EAAUJ,GACrBM,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,YAAW,KACTC,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,MAAU,GAEjDA,EAAM,IAGVyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBqB,YAAW,KACTC,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoB3B,QAAeC,MAAU,GAE9CA,EAAM,IAGbc,GAASE,EACTW,QAAQC,IAAId,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      return resolve({ position, delay });\n    } else {\n      return reject({ position, delay });\n    }\n  });\n}\n\nform.addEventListener('submit', func => {\n  func.preventDefault();\n\n  const form = func.currentTarget;\n  let delay = +form['delay'].value;\n  const step = +form['step'].value;\n  const amount = +form['amount'].value;\n  let position = 1;\n\n  for (let i = position; i <= amount; i += 1) {\n    position = i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        }, delay);\n      })\n\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.warning(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        }, delay);\n      });\n\n    delay += step;\n    console.log(delay);\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","func","preventDefault","form1","currentTarget","delay1","value","step","amount","position1","i","then","setTimeout","$parcel$interopDefault","Notify","success","catch","warning","console","log"],"version":3,"file":"03-promises.61508f18.js.map"}